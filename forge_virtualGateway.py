#forge_virtualGateway.py"""Virtual LoRaWAN Gateway SimulatorThis script simulates a virtual LoRaWAN gateway that periodically connects to anLNS (LoRaWAN Network Server), generates random payloads, and sends them to the server.The gateway's parameters, such as EUI, location, and temperature, can be customized.Usage:1. Replace the gateway parameters with your own values.2. Run the script to start the simulation.3. The gateway will connect to the LNS, send random payloads, and disconnect at   regular intervals specified by the connection_interval.Make sure to install the required modules and have the 'class_vLoRaGateways.py' modulein the same directory as this script."""import timeimport randomimport stringimport jsonfrom class_vLoRaGateways import VLoRaGateways# Load LNS configuration from JSON filewith open("server_config.json", "r") as config_file:    lns_config = json.load(config_file)# Retrieve LNS configuration from JSONserver_address = lns_config["server_address"]server_port = lns_config["server_port"]server_user = lns_config["server_user"]server_password =lns_config["server_password"]available_frequency_bands = lns_config["available_frequency_bands"]# Select one of the available frequency bandsselected_frequency_band = lns_config["selected_frequency_band"]if selected_frequency_band not in available_frequency_bands:    raise ValueError("Selected frequency band is not in the available bands")# Gateway parameters (replace with your values)gateway_eui = "c31ea78bf2921b37"  # Replace with your EUI-64 valuelatitude = 37.7749longitude = -122.4194altitude = 10.0frequency_band = selected_frequency_bandgateway_profile = {"channels": [0, 1, 2], "sf": 7}gateway_key = "gateway-secret-key"packet_forwarder_protocol = "semtech_udp"# Generate a random temperature between 38.1 and 41.2 degrees Celsiustemperature = round(random.uniform(38.1, 41.2), 1)# Interval for connecting/disconnecting (in seconds)connection_interval = 5  # Change this to your desired interval in second (e.g., 0.25 minutes)# Initialize and connect the virtual gatewayvirtual_gateway = VLoRaGateways(    gateway_eui,    server_user,    server_password,    latitude,    longitude,    altitude,    frequency_band,    server_address,    server_port,    gateway_profile,    gateway_key,    packet_forwarder_protocol,    temperature)try:    while True:        # Connect to the LoRaWAN Network Server        virtual_gateway.connect_to_network_server()        print("Connected to the LoRaWAN Network Server")        # Generate a random payload        random_payload = "Hello Server, Random volatile data " + ''.join(random.choice(string.ascii_letters + string.digits) for _ in range(16))        # Send the generated payload        virtual_gateway.send_data(random_payload)        print(f"Sent data: {random_payload}")        # Disconnect the virtual gateway        virtual_gateway.disconnect_from_network_server()        print("Disconnected from the LoRaWAN Network Server")        # Sleep for the specified interval before the next connection        time.sleep(connection_interval)except KeyboardInterrupt:    # Handle Ctrl+C to gracefully exit the loop    pass# Clean up by disconnecting from the network servervirtual_gateway.disconnect_from_network_server()